---
- name: Determine if we are on the original master
  set_fact:
    bucardo_master: bucardo_master_database_host in ansible_all_ipv4_addresses

- name: Determine if we are on the original slave
  set_fact:
    bucardo_slave: (ansible_all_ipv4_addresses | intersect(bucardo_slave_database_hosts) | length) > 0

- name: Upload recovery.conf
  template:
    src=recovery.conf.j2
    dest={{ postgresql_data_directory }}/recovery.conf

- name: Delete recovery.conf
  file:
    path: "{{ postgresql_data_directory }}/recovery.conf"
    state: absent
  sudo: Yes
  when: bucardo_master

- name: Stop postgres
  service:
    name: postgresql
    state: stopped
  when: bucardo_slave

- name: Make temporary copy of files
  shell: "cp {{ postgresql_data_directory }}/{{ item }} {{ postgresql_data_directory }}/../{{ item }}"
  sudo: Yes
  sudo_user: "{{ postgresql_admin_user }}"
  when: bucardo_slave
  with_items:
    - postgresql.conf
    - recovery.conf

- name: Remove all postgres data
  shell: "rm -rf {{ postgresql_data_directory }}"
  sudo: Yes
  sudo_user: root
  when: bucardo_slave

- name: Stream existing data from master to replica (pg_basebackup)
  shell: "PGPASSWORD={{ bucardo_user_pass }} pg_basebackup -h {{ bucardo_master_database_host }} -D {{ postgresql_data_directory }} -P -U {{ bucardo_user }} --xlog-method=stream --no-password -v"
  sudo: Yes
  sudo_user: "{{ postgresql_admin_user }}"
  when: bucardo_slave

# - name: Synchronize postgres data between hosts (rsync)
  # shell: "rsync -e 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no' -cva --inplace --exclude=\"*pg_xlog*,recovery.conf,*pg_stat_tmp*\" {{ postgresql_data_directory }} {{ item }}:{{ postgresql_data_directory }}"
  # with_items: bucardo_slave_database_hosts
  # when: bucardo_master and postgresql_initial_backup_strategy == "rsync"

- name: Restore temporary copy of postgresql.conf
  shell: "mv {{ postgresql_data_directory }}/../{{ item }} {{ postgresql_data_directory }}/{{ item }}"
  sudo: Yes
  sudo_user: "{{ postgresql_admin_user }}"
  when: bucardo_slave
  with_items:
    - postgresql.conf
    - recovery.conf

- name: Restart postgres
  service:
    name: postgresql
    state: restarted
  sudo: Yes

- name: Restart postgresql
  service: name=postgresql state=restarted
